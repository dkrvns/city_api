# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

import app.infrastructure.grpc.region.region_pb2 as region__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in region_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class RegionServiceStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRegions = channel.unary_unary(
                '/region.RegionService/GetRegions',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=region__pb2.RegionList.FromString,
                _registered_method=True)
        self.GetRegionById = channel.unary_unary(
                '/region.RegionService/GetRegionById',
                request_serializer=region__pb2.RegionIdRequest.SerializeToString,
                response_deserializer=region__pb2.Region.FromString,
                _registered_method=True)
        self.CreateRegion = channel.unary_unary(
                '/region.RegionService/CreateRegion',
                request_serializer=region__pb2.NewRegionDTO.SerializeToString,
                response_deserializer=region__pb2.RegionIdResponse.FromString,
                _registered_method=True)
        self.DeleteRegion = channel.unary_unary(
                '/region.RegionService/DeleteRegion',
                request_serializer=region__pb2.RegionIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class RegionServiceServicer:
    """Missing associated documentation comment in .proto file."""

    def GetRegions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegionById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRegion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRegion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRegions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegions,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=region__pb2.RegionList.SerializeToString,
            ),
            'GetRegionById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegionById,
                    request_deserializer=region__pb2.RegionIdRequest.FromString,
                    response_serializer=region__pb2.Region.SerializeToString,
            ),
            'CreateRegion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRegion,
                    request_deserializer=region__pb2.NewRegionDTO.FromString,
                    response_serializer=region__pb2.RegionIdResponse.SerializeToString,
            ),
            'DeleteRegion': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRegion,
                    request_deserializer=region__pb2.RegionIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'region.RegionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('region.RegionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RegionService:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRegions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/region.RegionService/GetRegions',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            region__pb2.RegionList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRegionById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/region.RegionService/GetRegionById',
            region__pb2.RegionIdRequest.SerializeToString,
            region__pb2.Region.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/region.RegionService/CreateRegion',
            region__pb2.NewRegionDTO.SerializeToString,
            region__pb2.RegionIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/region.RegionService/DeleteRegion',
            region__pb2.RegionIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
